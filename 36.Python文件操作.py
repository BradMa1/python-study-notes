# 一、文件操作概述
"""对文件的主要操作有：创建文件、打开文件、读取文件、写入文件、备份文件、关闭文件等。"""

# 二、文件的基本操作方法
'''
1.文件的操作步骤：
    1.1 打开文件
    1.2 读写文件
    1.3 关闭文件
    注意：可以只打开和关闭文件，不进行任何读写操作。
'''

# 三、open()打开函数
# 在Python中，使用open()函数，可以打开一个已经存在的文件，或者创建一个新文件，语法如下：

"""
f = open(name文件名，mode访问模式)
注：返回的结果是一个file文件对象

name:是要打开的目标文件名的字符串（可以包含文件所在的具体路径），如果该文件不存在，会创建一个新文件。
mode:设置打开文件的模式，mode的值可以是r、w或a。
    r：代表只读模式打开一个文件后续对这个文件只能进行读取操作。如文件不存在，则直接报错。
       另外r模式在打开文件时，会将光标放在文件开头（第一行）

    w：代表写模式打开一个文件，如果文件不存在，则会自动创建该文件。
       w模式主要针对文件写入，但w模式在写入时，光标也是放在文件开头（第一行），同时还会清空原有文件内容。

    a：代表追加模式打开一个文件，文件不存在，则自动创建该文件。
       a模式主要也是针对文件写入而定义的，但a模式不会清空文件的原有内容，而是在文件的尾部追加内容。
"""
# 打开文件
f = open("test.txt", "r")


# 四、write()函数写入文件
"""
基本语法：
  f.write('要写入的内容，要求是一个字符串类型的数据')

"""


# 五、close()函数关闭文件
"""
基本语法：

  f.close()

"""

# 入门案例

# 1.打开文件
f = open('python.txt','w')
# 2.写入内容
f.write('Hello.Python')
# 3.关闭文件
f.close()


# 六、解决写入中文乱码问题
"""
在打开文件时，通过encoding参数来指定编码格式，如：
f = open('python.txt','w',encoding ='utf-8')
"""
# 1.打开文件
f = open('python.txt','w',encoding ='utf-8')
# 2.写入内容
f.write('你好Python')
# 3.关闭文件
f.close()



# 七、文件读取操作 
# read(size)函数：主要用于文本类型或二进制文件（图片、音频、视频...）数据的读取。
'''size表示要从文件中读取的数据长度（单位是字节），如果没有传入num，那么就表示读取文件中所有的数据'''

f.read()  # 读取文件的全部内容
f.read(1024)  # 读取文件中前1024个字节的内容。字母或数字，一个占一个字节长度。中文utf-8编码，一个中文占3个字节长度。

# 打开文件
f = open('python.txt','r',encoding='utf-8')
# 使用read()方法读取文件所有内容
contents = f.read()
print(contents)
# 关闭文件
f.close()

# readlines()函数：主要用于文本类型数据的读取
"""readlines可以按照行的方式把整个文件中的内容进行一次性读取，并且返回一个列表，其中每一行的数据为一个元素。"""
# 打开文件
f = open('python.txt','r',encoding='utf-8')
# 使用readlines()方法读取文件所有内容
lines = f.readlines()
for i in lines:
    print(i)
print(lines)
# 关闭文件
f.close()


# 八、文件操作的mode模式
"""
模式                                                                      描述
 r             以只读方式打开文件，文件的指针将会放在文件开头，这是默认模式。
 rb            以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。
 r+            打开一个文件用于读写，文件指针将会放在文件的开头。
 rb+           以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
 w             打开一个文件只用于写入。如果文件存在则打开该文件，但内容会被覆盖。如果文件不存在，则会创建新文件。
 wb            以二进制格式打开一个文件只用于写入。如果文件存在则打开该文件，但内容会被覆盖。如果文件不存在，则会创建新文件。
 w+            打开一个文件用于读写。如果文件存在则打开该文件，但内容会被覆盖。如果文件不存在，则会创建新文件。
 wb+           以二进制格式打开一个文件用于读写。如果文件存在则打开该文件，但内容会被覆盖。如果文件不存在，则会创建新文件。
 a             打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果文件不存在，则创建新文件进行写入。
 ab            以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果文件不存在，则创建新文件进行写入。
 a+            打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果文件不存在，则创建新文件用于读写。
 ab+           以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果文件不存在，则创建新文件用于读写。
"""
# r+ 、w+ 、 a+ 带加号表示功能全，既能读又能写（区别在于指针到底指向哪）

    