# 一、变量的作用域
# 1.变量的作用域
"""变量的作用域指的是变量的作用范围（变量在哪里可用，在哪里不可用），主要分为两类：局部变量、全局变量"""

# 2.局部变量与全局变量
"""在Python中，定义在函数外部的变量就称之为全局变量;而定义在函数内部的变量就称之为局部变量"""
# 定义在函数外部的变量(全局变量)
num = 10
# 定义一个函数
def func():
    # 函数体代码
    # 定义在函数内部的变量（局部变量）
    i = 1


# 3.变量作用域的作用范围
"""
全局变量：在整个程序范围内都可以使用
局部变量:在函数的调用过程中，开始定义，函数运行过程中生效，函数执行完毕后小销毁
"""
# 3.1全局变量
str1 = 'hello'
# 定义一个函数
def func():
    # 在函数内部调用全局变量str1
    print(f'在局部作用域中调用str1变量：{str1}')


# 直接调用全局变量str1
print(f'在全局作用域中调用str1变量：{str1}')
# 调用func函数
func()


# 3.2局部变量
# 定义一个函数
def func():
    # 在函数内部定义一个局部变量
    num = 10
    print(f'在局部作用域中调用num局部变量：{num}')


# 调用func函数
func()

# 在全局作用域中调用num局部变量
print(f'在全局作用域中调用num局部变量：{num}')  #   NameError: name 'num' is not defined（计算机的垃圾回收机制）
                                              #   在函数内部定义的局部变量，在函数执行完毕后，自动销毁，所以无法在函数外部调用


# 4.global 关键字
# 思考：如果一个数据，在函数A和函数B中都要使用，那么如何解决？----可以将这个数据储存在全局变量里

# 定义全局变量
info = []
# 定义funcA函数
def funcA():
    # 向info全局变量中添加数据
    info.append({...})


# 定义funcB函数
def funcB():
    # 共享全局作用域中的全局变量info
    for i in info:
        ...

# 问题：能否在局部作用域中对全局变量进行修改？----可以

# 定义全局变量num = 10
num = 10
# 定义一个函数func
def func():
    # 尝试在局部作用域中修改全局变量num的值
    num = 20


# 调用函数func
func()
# 尝试访问全局变量num
print(f'全局变量num的值：{num}')    # 输出：全局变量num的值：10

# 最终结果：由运行结果可知，在函数体内部，理论上无法对全局变量进行修改，如果一定要修改，必须使用global关键字。

"""global关键字的作用：将局部变量变成全局变量"""

# 定义全局变量num = 10
num = 10
# 定义一个函数func
def func():
    # 尝试在局部作用域中修改全局变量num的值
    global num
    num = 20


# 调用函数func
func()
# 尝试访问全局变量num
print(f'全局变量num的值：{num}')    # 输出：全局变量num的值：20
